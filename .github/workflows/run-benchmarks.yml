# .github/workflows/benchmarks.yml
name: Validate-Benchmarks

on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:

concurrency:
  group: run-benchmarks-${{ github.ref }}
  cancel-in-progress: true

jobs:
  validate-benchmarks:
    runs-on: Benchmarking

    env:
      SKIP_BENCHMARKS: '0'
      # push fixes only to branches inside the main repo
      AUTO_FIX_BENCHMARKS: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]' && '1' || '0' }}

    steps:
      - name: Check out PR branch
        if: ${{ env.SKIP_BENCHMARKS != '1' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref:        ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Install GitHub CLI
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && env.SKIP_BENCHMARKS != '1' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Check skip label
        if: ${{ github.event.pull_request.head.repo.full_name == github.repository && env.SKIP_BENCHMARKS != '1' }}
        run: |
          labels=$(gh pr view ${{ github.event.pull_request.number }} --json labels --jq '.labels[].name')
          if echo "$labels" | grep -q "skip-validate-benchmarks"; then
            echo "skip-validate-benchmarks label found â€” skipping benchmarks."
            echo "SKIP_BENCHMARKS=1" >> "$GITHUB_ENV"
          fi

      - name: Install system dependencies
        if: ${{ env.SKIP_BENCHMARKS != '1' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y clang curl libssl-dev llvm libudev-dev protobuf-compiler

      - name: Install Rust toolchain
        if: ${{ env.SKIP_BENCHMARKS != '1' }}
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Cache Rust build
        if: ${{ env.SKIP_BENCHMARKS != '1' }}
        uses: Swatinem/rust-cache@v2
        with:
          key: bench-${{ hashFiles('**/Cargo.lock') }}

      - name: Build node with benchmarks
        if: ${{ env.SKIP_BENCHMARKS != '1' }}
        run: |
          cargo build --profile production -p node-subtensor --features runtime-benchmarks

      - name: Run & validate benchmarks
        if: ${{ env.SKIP_BENCHMARKS != '1' }}
        run: |
          chmod +x scripts/benchmark_action.sh
          ./scripts/benchmark_action.sh

      - name: Commit any updated weights
        if: ${{ always() && env.AUTO_FIX_BENCHMARKS == '1' }}
        run: |
          MARKER=scripts/benchmark_patch_marker
          if [[ -s "$MARKER" ]]; then
            echo "ðŸ”§  Updating benchmark weightsâ€¦"
            git config --global user.name  "Benchmark-Bot"
            git config --global user.email "bench-bot@users.noreply.github.com"
            mapfile -t files < <(sort -u "$MARKER")
            git add "${files[@]}"
            if git diff --cached --quiet; then
              echo "Nothing actually changed - skipping commit."
            else
              git commit -m "chore(bench): auto-update benchmark weight/read/write numbers"
              git push
            fi
          else
            echo "No benchmark drift detected - nothing to commit."
          fi
