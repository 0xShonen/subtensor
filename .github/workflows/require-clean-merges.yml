name: Require Clean Merges

on:
  pull_request:
    branches:
      - devnet-ready
      - devnet
      - testnet

jobs:
  assert-clean-merges:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures we get all branches for merging

      - name: Determine Target Branch and Set Merge List
        id: set-merge-branches
        run: |
          TARGET_BRANCH="${{ github.event.pull_request.base.ref }}"
          if [[ "$TARGET_BRANCH" == "devnet-ready" ]]; then
            echo "MERGE_BRANCHES=devnet-ready devnet testnet main" >> $GITHUB_ENV
          elif [[ "$TARGET_BRANCH" == "devnet" ]]; then
            echo "MERGE_BRANCHES=devnet testnet main" >> $GITHUB_ENV
          elif [[ "$TARGET_BRANCH" == "testnet" ]]; then
            echo "MERGE_BRANCHES=testnet main" >> $GITHUB_ENV
          elif [[ "$TARGET_BRANCH" == "main" ]]; then
            echo "MERGE_BRANCHES=main" >> $GITHUB_ENV
          else
            echo "MERGE_BRANCHES=devnet-ready devnet testnet main" >> $GITHUB_ENV
          fi

      - name: Check Merge Cleanliness
        run: |
          for branch in $MERGE_BRANCHES; do
            echo "Checking merge from $branch into ${{ github.event.pull_request.base.ref }}..."
            git fetch origin $branch
            git checkout ${{ github.event.pull_request.base.ref }}
            if ! git merge --no-commit --no-ff origin/$branch; then
              echo "Merge conflict detected when merging $branch into ${{ github.event.pull_request.base.ref }}"
              exit 1
            fi
            git merge --abort
          done
